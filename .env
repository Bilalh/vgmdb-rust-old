#!/bin/bash

######### anidb ###
function adb3(){
	if [ -z "$1" ]; then
		mp3="$(osascript -e 'tell application "iTunes"' -e 'set songLocation to location of item 1 of selection' -e 'end tell' -e 'return the POSIX path of songLocation')"
	else
		mp3="$1"
	fi

	echo "mp3: ${mp3}"
	dir="$(dirname "${mp3}")"

	rm ~/temp.json
	osascript -e 'set cmd to "function make_meta(){a={\"release_date\":document.getElementsByClassName('\''released'\'')[0].children[1].textContent,\"catalog\":document.getElementsByClassName('\''catalogno'\'')[0].children[1].textContent};a['\''comment'\'']=`\\n ${a.catalog}, ${document.baseURI},\\n`;return a};JSON.stringify(make_meta());"' -e '' -e 'tell application "Safari"' -e 'set res to do JavaScript cmd in current tab of first window' -e 'end tell' -e '' -e '-- set the clipboard to res' -e '' > ~/temp.json

	/Users/bilalh/Projects/vgmdb-rust/scripts/tag_mp3.py "$dir" ~/temp.json \
	&& mp3framelist "$mp3"

	echo "${dir}"
	osascript -e 'tell application "iTunes" to refresh selection' 1>/dev/null
	cd "${dir}"
}

######### m4a ###
# m4l   from itunes metadata only if url is inside metadata
# m4l   from itunes metadata only from safari

function m4l(){
	if [ -z "$1" ]; then
		m4a="$(osascript -e 'tell application "iTunes"' -e 'set songLocation to location of item 1 of selection' -e 'end tell' -e 'return the POSIX path of songLocation')"
	else
		m4a="$1"
	fi

	echo "m4a: ${m4a}"

	id="$(mutagen-inspect "$m4a"  | grep vgmdb | egrep -o '[0-9]+$')"
	dir="$(dirname "${m4a}")"
	set -x
	time vgmdb "$dir" "$id" -a -J ~/temp.json \
		&& /Users/bilalh/Projects/vgmdb-rust/scripts/tag_m4a.py "$dir" ~/temp.json \
		&& mutagen-inspect "$m4a"
	set +x
	echo "instrumental,"
	echo " ~instrumental~"
	echo "vgmdb.net/album/${id}"
	echo "${dir}"
	osascript -e 'tell application "iTunes" to refresh selection' 1>/dev/null
	cd "${dir}"
}

function m4s(){
	if [ -z "$1" ]; then
		m4a="$(osascript -e 'tell application "iTunes"' -e 'set songLocation to location of item 1 of selection' -e 'end tell' -e 'return the POSIX path of songLocation')"
	else
		m4a="$1"
	fi

	echo "m4a: ${m4a}"

	url="$(osascript -e 'tell application "Safari" to get URL of current tab of window 1')"
	id="$(echo "$url"  | grep vgmdb | egrep -o '[0-9]+$')"
	dir="$(dirname "${m4a}")"

	set -x
	time vgmdb "$dir" "$id" -a -J ~/temp.json \
		&& /Users/bilalh/Projects/vgmdb-rust/scripts/tag_m4a.py "$dir" ~/temp.json \
		&& mutagen-inspect "$m4a"
	set +x
	echo "instrumental,"
	echo " ~instrumental~"
	echo "vgmdb.net/album/${id}"
	echo "${dir}"
	osascript -e 'tell application "iTunes" to refresh selection' 1>/dev/null
	cd "${dir}"
}



######### mp3s ###
# l3   from itunes metadata only
# m3   from itunes metadata only if url in side meta
# ee3  from itunes meta and track names
# aa3  from selected finder item, full
# mm3  from selected finder item, meta only

export FZF_DEFAULT_COMMAND='ag -l -g ""'

function l3l(){
	l=-l l3 "$@"
}

function l3(){
	mp3="$(osascript -e 'tell application "iTunes"' -e 'set songLocation to location of item 1 of selection' -e 'end tell' -e 'return the POSIX path of songLocation')"

	echo "mp3: ${mp3}"

	url="$(osascript -e 'tell application "Safari" to get URL of current tab of window 1')"
	id="$(echo "$url"  | grep vgmdb | egrep -o '[0-9]+$')"


	dir="$(dirname "${mp3}")"
	set -x
	# shellcheck disable=SC2086
	time vgmdb -atn -M ${l:-} "$dir" "$id" && mp3framelist "$mp3"
	set +x
	echo "instrumental,"
	echo " ~instrumental~"
	echo "vgmdb.net/album/${id}"
	echo "${dir}"
	osascript -e 'tell application "iTunes" to refresh selection' 1>/dev/null
	cd "${dir}"
}

function ee3(){
	mp3="$(osascript -e 'tell application "iTunes"' -e 'set songLocation to location of item 1 of selection' -e 'end tell' -e 'return the POSIX path of songLocation')"

	echo "mp3: ${mp3}"

	url="$(osascript -e 'tell application "Safari" to get URL of current tab of window 1')"
	id="$(echo "$url"  | grep vgmdb | egrep -o '[0-9]+$')"


	dir="$(dirname "${mp3}")"
	set -x
	# shellcheck disable=SC2086
	time vgmdb -an  ${l:-} "$dir" "$id" && mp3framelist "$mp3"
	set +x
	echo "vgmdb.net/album/${id}"
	echo "${dir}"
	osascript -e 'tell application "iTunes" to refresh selection' 1>/dev/null
	cd "${dir}"
}

function mm3(){
	dir="$(gf)"
	[ -z "${dir}" ] && return 1

	url="$(osascript -e 'tell application "Safari" to get URL of current tab of window 1')"
	id="$(echo "$url"  | grep vgmdb | egrep -o '[0-9]+$')"


	set -x
	# shellcheck disable=SC2086
	time vgmdb -atn -M  ${l:-} "$dir" "$id" && mp3framelist "$(find "${dir}" -name '*.mp3' | head -n1 )"
	set +x
	echo "vgmdb.net/album/${id}"
	echo "${dir}"
	cd "${dir}"
}


function aa3(){
	dir="$(gf)"
	[ -z "${dir}" ] && return 1

	url="$(osascript -e 'tell application "Safari" to get URL of current tab of window 1')"
	id="$(echo "$url"  | grep vgmdb | egrep -o '[0-9]+$')"


	set -x
	# shellcheck disable=SC2086
	time vgmdb  ${l:-} "$dir" "$id" && mp3framelist "$(find "${dir}" -name '*.mp3' | head -n1 )"
	set +x
	echo "vgmdb.net/album/${id}"
	echo "${dir}"
	cd "${dir}"
}

function m3l(){
	l=-l m3 "$@"
}

function m3(){
	if [ -z "$1" ]; then
		mp3="$(osascript -e 'tell application "iTunes"' -e 'set songLocation to location of item 1 of selection' -e 'end tell' -e 'return the POSIX path of songLocation')"
	else
		mp3="$1"
	fi

	echo "mp3: ${mp3}"

	id="$(mp3framelist "$mp3"  | grep vgmdb | egrep -o '[0-9]+$')"
	dir="$(dirname "${mp3}")"
	set -x
	# shellcheck disable=SC2086
	time vgmdb -atn -M ${l:-} "$dir" "$id" && mp3framelist "$mp3"
	set +x
	echo "instrumental,"
	echo " ~instrumental~"
	echo "vgmdb.net/album/${id}"
	echo "${dir}"
}
